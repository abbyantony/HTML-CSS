<html>
    <head>
     <head>
        <title>MassKarma</title> 
        <!-- This styling is for the canvas demonstration purposes. It is recommended 
    that style is moved to separate file for organization in larger projects -->
        <style>
              html, body {
                height: 100%;
            }
            body {
                margin: 0;
            }
            
            .main {
                margin: 18px;
                border-radius: 4px;
                background-color: #eee;
            }
           ::-webkit-scrollbar {
                   width: 12px;
            }
 
          ::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
             border-radius: 10px;
            }
 
          ::-webkit-scrollbar-thumb {
             border-radius: 10px;
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
            }
            
            div[role="log"]{
               background: white;
            }       

            div[role="form"]{
               background-color: black;
                height: 128px;
            }
            
            div[role="status"]{
                background-color: white;
                height: 42%;

            }
            div{
            font-size: 14px;
            }
           

    
            #webchat {
                position: absolute;
                height: calc(100% - 300px);
                width:32%;
                top: px;
                overflow: hidden;
            }

body.elementor-kit-626 p{margin-bottom:0px;}body.elementor-kit-626 button,body.elementor-kit-626 input[type="button"],body.elementor-kit-626 input[type="submit"],body.elementor-kit-626 .elementor-button{background-color:transparent !important;}
  </style>
    </head>
      
<div>
            
            <div id="webchat" role="main"></div>
        </div>    
      <script src="https://cdn.botframework.com/botframework-webchat/latest/webchat.js"></script>
      <script>
            const styleOptions = {
               // Add styleOptions to customize web chat canvas
             hideUploadButton: true,
               bubbleBackground : 'rgba(0, 0, 225, .1)',
               bubbleBorderStyle: 'groove',
               bubbleBorderWidth: 2,
               bubbleBorderColor: '#E6E6E6',
               bubbleFromUserBackground: 'rgba(0, 255, 0, .1)',
               bubbleFromUserBorderStyle: 'ridge',
               bubbleFromUserBorderWidth: 1.5,
               sendBoxButtonColorOnHover: 'black',
               botAvatarImage:'https://media-exp1.licdn.com/dms/image/C4E03AQGc9mAy9ErTFw/profile-displayphoto-shrink_400_400/0?e=1596067200&v=beta&t=c5mVvBEfyNQgktZL8CozQqAa-xt_BlAqKx4hvbre024',
               userAvatarImage: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS18YDZmgMSKH_YgxIl5xroBN0c0eJmq0u56Y2iPV-atZBf0xJk&usqp=CAU',
               timestampColor: 'black',
               accent: 'black',
               subtle: 'grey',
               primaryFont: 'lato'
               
            };

            // Add your BOT ID below
            var BOT_ID = "a2e05571-a18a-4ba4-a07e-dd270936c9d9"; 

            var theURL = "https://powerva.microsoft.com/api/botmanagement/v1/directline/directlinetoken?botId=" + BOT_ID;

            const store = window.WebChat.createStore(
               {},
               ({ dispatch }) => next => action => {
                   if (action.type === "DIRECT_LINE/CONNECT_FULFILLED") {
                      dispatch({
                          meta: {
                               method: "keyboard",
                           },
                           payload: {
                               activity: {
                                     channelData: {
                                          postBack: true,
                                     },
                                      //Web Chat will show the 'Greeting' System Topic message which has a trigger-phrase 'hello'
                                      name: 'startConversation',
                                      type: "event"
                                 },
                            },
                            type: "DIRECT_LINE/POST_ACTIVITY",
                       });
                 }
                 return next(action);
              }
           );
           fetch(theURL)
                .then(response => response.json())
                .then(conversationInfo => {
                    window.WebChat.renderWebChat(
                        {
                            directLine: window.WebChat.createDirectLine({
                                token: conversationInfo.token,
                            }),
                            store: store,
                            styleOptions: styleOptions
                        },
                        document.getElementById('webchat')
                    );
                })
                .catch(err => console.error("An error occurred: " + err));
        </script>
      </body>
    </html>
